name: CI/CD Pipeline (Node.js + Docker + Vagrant + Ansible)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:

  build-test:
    name: Build & Test Node.js App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Run unit tests
        run: npm test

  docker-deploy:
    name: Docker Build + Deploy to Minikube
    runs-on: self-hosted
    needs: build-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t devops-ninja-app:latest .

      - name: Deploy to Minikube
        run: |
          kubectl apply -f k8s/
          kubectl rollout status deployment/devops-ninja-app

  lint-infra:
    name: Lint Vagrant & Ansible
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Validate Vagrantfile
        working-directory: ./vagrant
        run: vagrant validate

      - name: Install ansible-lint
        run: |
          sudo apt update
          sudo apt install -y ansible-lint

      - name: Lint Ansible playbooks
        working-directory: ./ansible
        run: ansible-lint site.yml

  deploy-infra:
    name: Deploy with Vagrant & Ansible
    runs-on: self-hosted
    needs: lint-infra

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ansible & dependencies
        run: |
          sudo apt update
          sudo apt install -y ansible sshpass python3-pymysql

      - name: Start Vagrant VMs
        working-directory: ./vagrant
        run: |
          vagrant up --provider=virtualbox
          vagrant status

      - name: Run Ansible Playbook
        working-directory: ./ansible
        run: ansible-playbook -i inventories/dev/hosts.ini site.yml --ask-vault-pass

  test-infra:
    name: Infrastructure Tests (Testinfra)
    runs-on: self-hosted
    needs: deploy-infra

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Python requirements
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip3 install testinfra pytest

      - name: Run Infra Tests
        working-directory: ./tests
        run: pytest -v
